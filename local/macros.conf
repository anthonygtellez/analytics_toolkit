[lineartrend(2)]
args = x,y
definition = eventstats count as numevents sum($x$) as sumX sum($y$) as sumY sum(eval($x$*$y$)) as sumXY sum(eval($x$*$x$)) as sumX2 sum(eval($y$*$y$)) as sumY2\
    | eval slope=((numevents*sumXY)-(sumX*sumY))/((numevents*sumX2)-(sumX*sumX))\
    | eval yintercept= (sumY-(slope*sumX))/numevents\
    | eval newY=(yintercept + (slope*$x$))\
    | eval R=((numevents*sumXY) - (sumX*sumY))/sqrt(((numevents*sumX2)-(sumX*sumX))* ((numevents*sumY2)-(sumY*sumY)))\
    | eval R2=R*R
iseval = 0

[forecast5w(4)]
args = val,confidence,reltime,days
definition = eval w=case(\
(_time>relative_time(now(), "$reltime$@d-5w-30m") AND _time<=relative_time(now(), "$reltime$@d-5w+$days$d+30m")), 5,\
(_time>relative_time(now(), "$reltime$@d-4w-30m") AND _time<=relative_time(now(), "$reltime$@d-4w+$days$d+30m")), 4,\
(_time>relative_time(now(), "$reltime$@d-3w-30m") AND _time<=relative_time(now(), "$reltime$@d-3w+$days$d+30m")), 3,\
(_time>relative_time(now(), "$reltime$@d-2w-30m") AND _time<=relative_time(now(), "$reltime$@d-2w+$days$d+30m")), 2,\
(_time>relative_time(now(), "$reltime$@d-1w-30m") AND _time<=relative_time(now(), "$reltime$@d-1w+$days$d+30m")), 1 \
) \
| eval shift=case(isnotnull(w), "+"+w+"w30m +"+w+"w20m +"+w+"w10m +"+w+"w0m +"+w+"w+10m +"+w+"w+20m +"+w+"w+30m") \
| where isnotnull(shift) \
| makemv shift \
| mvexpand shift \
| eval time=relative_time(_time, shift) \
| eventstats avg($val$) as pred by time \
| eval upper=if($val$>pred,$val$,pred) \
| eval lower=if($val$<pred,$val$,pred) \
| stats avg($val$) as pred, stdev(upper) as ustdev, stdev(lower) as lstdev by time \
| eval low=pred-lstdev*(sqrt(1/(1-$confidence$/100))) \
| eval high=pred+ustdev*(sqrt(1/(1-$confidence$/100))) \
| eval _time=time \
| timechart span=10m min(pred) as pred, min(low) as low, min(high) as high \
| where _time>relative_time(now(), "$reltime$@d") AND _time<=relative_time(now(), "$reltime$+$days$d@d")
iseval = 0

[pcr(2)]
args = in,out
definition = eval pcr_total=$in$+$out$ \
| eval pcr_ratio= (($out$-$in$)/pcr_total) \
| eval pcr_source_fraction = ((1 + pcr_ratio)/2), pcr_dest_fraction = ((1 - pcr_ratio)/2) \
| eval pcr_range = case(pcr_ratio > 0.4, "Pure Push", pcr_ratio > 0, "70:30 Export", pcr_ratio == 0, "Balanced Exchange", pcr_ratio >= -0.5, "3:1 Import", pcr_ratio > -1, "Pure Pull")
iseval = 0

[error_rate(2)]
args = success,failure
definition = eval err_total = $success$+$failure$ \
| eval err_ratio = ($failure$/err_total)

[success_rate(2)]
args = success, failure
definition = eval success_total = $success$+$failure$ \
| eval success_rate = ($success$/success_total)
iseval = 0


[http_error(1)]
args = status_code
definition = eval http_error = if(($status_code$>=400), "Error", "Success")
iseval = 0

[subnet_to_cidr(2)]
args = subnet,network
definition = lookup subnet_to_cidr subnet_mask AS $subnet$ \
| eval cidr_address=$network$+cidr
iseval = 0

[iana(1)]
args = ip
definition = lookup iana Prefix AS $ip$
iseval = 0

[port2service(1)]
args = port
definition = lookup ports port AS $port$
iseval = 0

[adversaries(2)]
args = input,type
definition = lookup adversaries $type$ AS $input$
iseval = 0

[cdn(1)]
args = domain
definition = lookup cdn domain AS $domain$
iseval = 0

[insecure_ciphers(1)]
args = cipher
definition = lookup insecure_ciphers cipher AS $cipher$
iseval = 0

[ddns(1)]
args = domain
definition = lookup ddns dyndns_domains AS $domain$
iseval = 0

[pearsoncoorelationcoe(2)]
args = x,y
definition = eval n=1, xx=$x$*$x$, xy=$x$*$y$, yy=$y$*$y$ \
| eval rho_xy=(xy/n-x/n*y/n)/(sqrt(xx/n-(x/n)*(x/n))*sqrt(yy/n-(y/n)*(y/n)))
iseval = 0

[relative_time(1)]
args = time
definition = eval BucketMinuteOfHour=strftime($time$, "%M") \
| eval HourOfDay=strftime($time$, "%H") \
| eval DayOfWeek=strftime($time$, "%A")
iseval = 0

[winProcCheck(2)]
args = index,noVals
definition = index="$index$" sourcetype="wineventlog:security" (EventCode=4688) NOT\
    (Account_Name=*$) \
[| inputlookup win-processes.csv\
| fields process-name\
| rename process-name AS New_Process_Name\
| eval New_Process_Name="TERM(".New_Process_Name.")"\
| return $noVals$ $New_Process_Name]
iseval = 0

[xT(1)]
args = process
definition = rex field="$process$" "(?<xT_driveletter>[^\\\]+)\\\(?<xT_pathsegment>[^\\\]+)\\\(?<xT_program>[^\\\]+)"\
| rex field="$process$" "\.(?<xT_extension>\w{3}+$)"\
| rex field="$process$" "\\\(?<xT_executiblename>(?:.(?!\\\))+)\.\w{3}+$"
iseval = 0

[dga_index]
definition = (index=suricata event_type=dns OR index=bro)\
| rename query as domain\
| `ut_shannon(domain)` \
| `ut_meaning(domain)`\
| eval ut_digit_ratio = 0.0 \
| eval ut_vowel_ratio = 0.0 \
| eval ut_domain_length = max(1,len(domain)) \
| rex field=domain max_match=0 "(?<digits>\d)" \
| rex field=domain max_match=0 "(?<vowels>[aeiou])" \
| eval ut_digit_ratio=if(isnull(digits),0.0,mvcount(digits) / ut_domain_length) \
| eval ut_vowel_ratio=if(isnull(vowels),0.0,mvcount(vowels) / ut_domain_length) \
| eval ut_consonant_ratio = max(0.0, 1.000000 - ut_digit_ratio - ut_vowel_ratio) \
| eval ut_vc_ratio = ut_vowel_ratio / ut_consonant_ratio\
| apply "dga_ngram" \
| apply "dga_pca"\
| fields - digits - vowels - domain_tfidf*\
| table _time domain ut* PC*\
| collect index=dga_summary
iseval = 0
